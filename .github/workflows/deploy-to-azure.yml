name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    environment: TEST
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

  docker:
    needs: build
    runs-on: ubuntu-latest
    environment: TEST
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml   
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to ACR
      uses: azure/docker-login@v2
      with:
        login-server:  ${{ secrets.ACR_NAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker images
      run: |
        docker build . -t ${{ secrets.ACR_NAME }}.azurecr.io/vehicle-challenge:${{ github.sha }}
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/vehicle-challenge:${{ github.sha }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    environment: TEST
    steps:
    
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

    - name: Create Docker Registry Secret
      run: |
        kubectl delete secret acr-secret --ignore-not-found

        kubectl create secret docker-registry acr-secret \
          --docker-server=${{ secrets.ACR_NAME }}.azurecr.io \
          --docker-username=${{ secrets.ACR_USERNAME }} \
          --docker-password=${{ secrets.ACR_PASSWORD }} \
          --docker-email=${{ secrets.DOCKER_EMAIL }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Create/Update ConfigMap and Secret
      run: |
        kubectl delete configmap general-config --ignore-not-found

        kubectl create configmap general-config \
          --from-literal=DB_USER=${{ secrets.DB_USER }} \
          --from-literal=DB_HOST=${{ secrets.DB_HOST }} \
          --from-literal=DB_PORT=${{ secrets.DB_PORT }} \
          --from-literal=TZ=${{ secrets.TZ }} \
          --from-literal=LANG=${{ secrets.LANG }} \
          --from-literal=LANGUAGE=${{ secrets.LANGUAGE }} \
          --from-literal=RABBITMQ_DEFAULT_USER=${{ secrets.RABBITMQ_DEFAULT_USER }} \
          --from-literal=RABBITMQ_DEFAULT_PASS=${{ secrets.RABBITMQ_DEFAULT_PASS }} \
          --dry-run=client -o yaml | kubectl apply -f -

        kubectl delete secret general-secret --ignore-not-found

        kubectl create secret generic general-secret \
          --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
          --dry-run=client -o yaml | kubectl apply -f -
    
    - name: Replace variables in Kubernetes manifest
      run: |
        sed -i 's|${IMAGE_TAG}|${{ github.sha }}|g' k8s/vehicle-deployment.yaml
        sed -i 's|${ACR_NAME}|${{ secrets.ACR_NAME }}|g' k8s/vehicle-deployment.yaml

    - name: Deploy to AKS
      run: |
        kubectl apply -f k8s/vehicle-deployment.yaml
        kubectl apply -f k8s/vehicle-service.yaml
